#+TITLE: Dot Files
#+AUTHOR: Kyeong Soo Choi
#+STARTUP: overview
#+PROPERTY: header-args :emacs-lisp :mkdirp yes :results none

* Ideavim

#+begin_src text :tangle ~/.config/.ideavimrc
  let mapleader = " "

  "" Source your .vimrc
  "source ~/.vimrc

  set ideajoin
  set NERDTree
  "set sneak
  "set quickscope
  set easymotion

  map s <Plug>(easymotion-f)
  map S <Plug>(easymotion-F)
  map <Leader><Leader>w <Plug>(easymotion-w)
  map <Leader><Leader>W <Plug>(easymotion-W)
  map <Leader><Leader>b <Plug>(easymotion-b)
  map <Leader><Leader>B <Plug>(easymotion-B)
  map <Leader><Leader>e <Plug>(easymotion-e)
  map <Leader><Leader>E <Plug>(easymotion-E)
  map <Leader><Leader>ge <Plug>(easymotion-ge)
  map <Leader><Leader>gE <Plug>(easymotion-gE)
  map <Leader><Leader>j <Plug>(easymotion-j)
  map <Leader><Leader>k <Plug>(easymotion-k)
  map <Leader><Leader>n <Plug>(easymotion-n)
  map <Leader><Leader>N <Plug>(easymotion-N)
  map <Leader><Leader>s <Plug>(easymotion-s)
  map <Leader>s <Plug>(easymotion-jumptoanywhere)

  inoremap jj <ESC>

  " basic emacs navigation in insert mode, some cua mode
  inoremap <C-f> <Right>
  inoremap <C-b> <Left>
  inoremap <C-n> <Down>
  inoremap <C-p> <Up>
  inoremap <C-e> <End>
  inoremap <C-a> <Home>
  inoremap <C-d> <Del>
  inoremap <M-f> <C-o>w
  inoremap <M-b> <C-o>b
  inoremap <M-d> <C-o>dw
  inoremap <M-BS> <C-o>db
  inoremap <C-y> <C-o>P
  vnoremap <C-c> y
  inoremap <C-v> <C-o>P
  vnoremap <C-w> <C-o>d
  vnoremap <M-w> <C-o>y

  nnoremap <Leader>k :q<CR>

  vnoremap x "_x
  nnoremap x "_x
  vnoremap p "_dp
  vnoremap P "_dP

  nnoremap - <C-x>
  nnoremap + <C-a>

  set clipboard=unnamed
  set clipboard+=ideaput
  set showmode
  set showcmd
  set scrolloff=8

  vnoremap > >gv
  vnoremap < <gv

  "vnoremap ( c()<ESC>P
  "vnoremap [ c[]<ESC>P
  "vnoremap { c{}<ESC>P

  nnoremap <C-3> ciw#{}<ESC>P
  inoremap <C-g> <ESC>
  vnoremap <C-g> <ESC>
  nnoremap <C-g> <ESC>

  map <M-g> <Action>(Generate)
  map <C-,> <Action>(ShowSettings)
  map <C-S-,> <Action>(ShowProjectStructureSettings)
  map <M-q> <Action>(CloseEditor)
  map <M-a><M-q> <Action>(CloseAllEditor)
  map <M-n> <Action>(MethodDown)
  map <M-p> <Action>(MethodUp)
  map <M-S-j> <Action>(MoveLineDown)
  map <M-S-k> <Action>(MoveLineUp)

  map gs <Action>(ActivateStructureToolWindow)
  map gr <Action>(FindUsages)

  vmap gc <Action>(CommentByLineComment)
  nmap gcc <Action>(CommentByLineComment)

  map <Leader>rr <Action>(UpdateRunningApplication)
  map <Leader>` <Action>(ActivateTerminalToolWindow)
  map <Leader>ns <Action>(NewScratchFile)
  map <Leader>fl <Action>(ReformatCode)
  map <Leader>8 <Action>(ToggleLineBreakpoint)
  map <Leader>rf <Action>(RenameFile)
  map <Leader>rn <Action>(RenameElement)
  map <Leader><Space> <Action>(GotoAction)
  map <M-x> <Action>(GotoAction)
  map <Leader>ff <Action>(GotoFile)
  map <Leader>fc <Action>(GotoClass)
  map <Leader>fo <Action>(RecentFiles)
  map <Leader>fs <Action>(ActivateStructureToolWindow)
  map <Leader>e <Action>(ActivateProjectToolWindow)
  map <Leader>1 <Action>(SelectIn)
  map <Leader>] <Action>(NextTab)
  map <Leader>[ <Action>(PreviousTab)

  map <Leader>w <Action>(EditorSelectWord)
  map <Leader>W <Action>(EditorUnSelectWord)
  map <M-h> <Action>(EditorSelectWord)
  map <M-S-h> <Action>(EditorUnSelectWord)

  map <C-s> <Action>(Find)
  map <M-S-5> <Action>(Replace)
#+end_src

* Alacritty

#+begin_src toml :tangle ~/.config/alacritty/alacritty.toml
  # [terminal]
  # shell = { program = "wsl", args = ["--cd ~"] }
  # shell = { program = "pwsh" }

  [font]
  size = 12

  [font.normal]
  family = "Iosevka Nerd Font Mono"
  style = "Regular"

  [font.bold]
  family = "Iosevka Nerd Font Mono"
  style = "Semi Bold"

  [font.italic]
  family = "Iosevka Nerd Font Mono"
  style = "Italic"

  [window]
  dimensions = { columns = 120, lines = 30 }
  padding = { x = 3, y = 3 }

  [cursor]
  style = { shape = "Block", blinking = "Always" }

  [mouse]
  hide_when_typing = true
  bindings = [
    { mouse = "Right", mods = "Shift", action = "Paste" },
    { mouse = "Right", action = "Copy" },
    { mouse = "Right", action = "ClearSelection" },
  ]
#+end_src

* Zellij

#+begin_src conf :tangle ~/.config/zellij/config.kdl
  keybinds clear-defaults=true {
      locked {
	  bind "Ctrl x" { SwitchToMode "normal"; }
      }
      normal {
	  bind "Ctrl x" { SwitchToMode "locked"; }
	  bind "|" { NewPane "right"; SwitchToMode "locked"; }
	  bind "_" { NewPane "down"; SwitchToMode "locked"; }
	  bind "t" { NewTab; SwitchToMode "locked"; }
	  bind "1" { GoToTab 1; SwitchToMode "locked"; }
	  bind "2" { GoToTab 2; SwitchToMode "locked"; }
	  bind "3" { GoToTab 3; SwitchToMode "locked"; }
	  bind "4" { GoToTab 4; SwitchToMode "locked"; }
	  bind "5" { GoToTab 5; SwitchToMode "locked"; }
	  bind "6" { GoToTab 6; SwitchToMode "locked"; }
	  bind "7" { GoToTab 7; SwitchToMode "locked"; }
	  bind "8" { GoToTab 8; SwitchToMode "locked"; }
	  bind "9" { GoToTab 9; SwitchToMode "locked"; }
	  bind "p" { GoToPreviousTab; SwitchToMode "locked"; }
	  bind "n" { GoToNextTab; SwitchToMode "locked"; }
	  bind "left" { MoveFocus "left"; SwitchToMode "locked"; }
	  bind "down" { MoveFocus "down"; SwitchToMode "locked"; }
	  bind "up" { MoveFocus "up"; SwitchToMode "locked"; }
	  bind "right" { MoveFocus "right"; SwitchToMode "locked"; }
	  bind "h" { MoveFocus "left"; SwitchToMode "locked"; }
	  bind "j" { MoveFocus "down"; SwitchToMode "locked"; }
	  bind "k" { MoveFocus "up"; SwitchToMode "locked"; }
	  bind "l" { MoveFocus "right"; SwitchToMode "locked"; }
	  bind "o" { SwitchFocus; SwitchToMode "locked"; }
	  bind "x" { CloseFocus; SwitchToMode "locked"; }
      }
      pane {
	  bind "left" { MoveFocus "left"; }
	  bind "down" { MoveFocus "down"; }
	  bind "up" { MoveFocus "up"; }
	  bind "right" { MoveFocus "right"; }
	  bind "h" { MoveFocus "left"; }
	  bind "j" { MoveFocus "down"; }
	  bind "k" { MoveFocus "up"; }
	  bind "l" { MoveFocus "right"; }
	  bind "c" { SwitchToMode "renamepane"; PaneNameInput 0; }
	  bind "d" { NewPane "down"; SwitchToMode "locked"; }
	  bind "e" { TogglePaneEmbedOrFloating; SwitchToMode "locked"; }
	  bind "f" { ToggleFocusFullscreen; SwitchToMode "locked"; }
	  bind "i" { TogglePanePinned; SwitchToMode "locked"; }
	  bind "n" { NewPane; SwitchToMode "locked"; }
	  bind "p" { SwitchToMode "normal"; }
	  bind "r" { NewPane "right"; SwitchToMode "locked"; }
	  bind "w" { ToggleFloatingPanes; SwitchToMode "locked"; }
	  bind "x" { CloseFocus; SwitchToMode "locked"; }
	  bind "z" { TogglePaneFrames; SwitchToMode "locked"; }
	  bind "tab" { SwitchFocus; }
      }
  }
#+end_src

* Powershell

Install =oh-my-posh= first.

#+begin_src powershell :tangle no
  oh-my-posh init pwsh --config "$env:POSH_THEMES_PATH\amro.omp.json" | Invoke-Expression

  Set-Alias -Name "ll" ls
  Set-Alias -Name "l" ls
  Set-Alias -Name "vi" nvim

  Set-PSReadLineOption -EditMode Emacs

  $env:XDG_CONFIG_HOME = "$HOME\.config"
  $env:XDG_DATA_HOME = "$HOME\.local"
#+end_src
